#install.packages("png")
#install.packages("gifsky")
#install.packages("gganimate")
#install.packages("gapminder")
#install.packages("ggmap")
#install.packages("esquisse")
#install.packages("ggiraph")
#install.packages("gdtools")
#install.packages("leaflet") # interactive maps
library(ggplot2)
library(gganimate)
library(gapminder)
#library(tidyverse)
library(ggmap)
library(ggiraph)
library(esquisse)
library(leaflet)
# esquisser(df)
earthquakes_csv = "eartquakes_Romania.csv"
df <- read.csv(file = earthquakes_csv)
setwd("~/infoVisualization")
earthquakes_csv = "eartquakes_Romania.csv"
df <- read.csv(file = earthquakes_csv)
# convert time column to R timestap
df$time <- gsub('T', ' ', df$time)
df$time <- gsub('Z', '', df$time)
df$time <- as.POSIXct(df$time, format="%Y-%m-%d %H:%M:%OS", tz=Sys.timezone())
#split timestamp into date and time
df$timeYear <- as.Date(df$time)
df$timeDay <- format(df$time, "%H:%M:%OS")
df$year <- format(df$time, "%Y")
df$month <- format(df$time, "%m")
df$yearInt <- as.integer(df$year)
# see data types
str(df)
# Exploring values to better understand the dataset
# Starting with mag (magnitude)
mag_hist <- ggplot(df) +
geom_histogram(mapping = aes(x = mag), fill = "steelblue", bins=40) +
#geom_freqpoly(mapping = aes(x = mag), bins=40) +
theme_minimal()
mag_hist + ggtitle("Number of recorded earthquakes by magnitude")
# let's see how many are per year
year_bar <- ggplot(df) +
geom_bar(mapping = aes(y = year), fill = "steelblue") +
theme_minimal()
year_bar + ggtitle("Number of earthquakes per year (1990 - 2017)")
# and per month
month_bar <- ggplot(df) +
geom_bar(mapping = aes(x = month), fill = "steelblue") +
theme_minimal()
month_bar + ggtitle("Number of earthquakes by month (1990 - 2017)")
# earthquakes count by depth
depth_bar <- ggplot(df) +
geom_histogram(mapping = aes(x = depth), fill = "steelblue") +
theme_minimal()
depth_bar + ggtitle("Number of earthquakes by depth")
# magtype count
magtype_bar <- ggplot(df) +
geom_bar(mapping = aes(x = magType), fill = "steelblue") +
theme_minimal()
magtype_bar + ggtitle("Magnitude type (?)")
# nst count
nst_bar <- ggplot(df) +
geom_histogram(mapping = aes(x = nst), fill = "steelblue", bins=50) +
theme_minimal()
nst_bar + ggtitle("Nst type (?)")
# gap
gap_bar <- ggplot(df) +
geom_histogram(mapping = aes(x = gap), fill = "steelblue") +
theme_minimal()
gap_bar + ggtitle("Gap Value (?)")
# dmin
dmin_bar <- ggplot(df) +
geom_histogram(mapping = aes(x = dmin), fill = "steelblue") +
theme_minimal()
dmin_bar + ggtitle("Dmin Value (?)")
# rms
rms_bar <- ggplot(df) +
geom_histogram(mapping = aes(x = rms), fill = "steelblue") +
theme_minimal()
rms_bar + ggtitle("Rms Value (?)")
# net
net_bar <- ggplot(df) +
geom_bar(mapping = aes(x = net), fill = "steelblue") +
theme_minimal()
net_bar + ggtitle("Net Value (?)")
# type
type_bar <- ggplot(df) +
geom_bar(mapping = aes(x = type), fill = "steelblue") +
theme_minimal()
type_bar + ggtitle("Type Value (?)")
# status
status_bar <- ggplot(df) +
geom_bar(mapping = aes(x = status), fill = "steelblue") +
theme_minimal()
status_bar + ggtitle("Status Value (?)")
# LocationSource
locationSource_bar <- ggplot(df) +
geom_bar(mapping = aes(x = locationSource), fill = "steelblue") +
theme_minimal()
locationSource_bar + ggtitle("Location Source Value (?)")
# MagSource
magSourceSource_bar <- ggplot(df) +
geom_bar(mapping = aes(x = magSource), fill = "steelblue") +
theme_minimal()
magSourceSource_bar + ggtitle("Mag Source Value (?)")
# horizontalError
horizontalError_hist <- ggplot(df) +
geom_histogram(mapping = aes(x = horizontalError), fill = "steelblue") +
theme_minimal()
horizontalError_hist + ggtitle("horizontalError Value (?)")
depthError_hist <- ggplot(df) +
geom_histogram(mapping = aes(x = depthError), fill = "steelblue") +
theme_minimal()
depthError_hist + ggtitle("depthError Value (?)")
magError_hist <- ggplot(df) +
geom_histogram(mapping = aes(x = magError), fill = "steelblue") +
theme_minimal()
magError_hist + ggtitle("magError Value (?)")
magNst_hist <- ggplot(df) +
geom_histogram(mapping = aes(x = magNst), fill = "steelblue") +
theme_minimal()
magNst_hist + ggtitle("magNst Value (?)")
mag_hist <- ggplot(df) +
geom_histogram(mapping = aes(x = mag), fill = "steelblue", bins = 40) +
#geom_freqpoly(mapping = aes(x = mag), bins=40) +
theme_minimal()
# We start by exploring the most obvious questions: where do most earthquakes happen, including their magnitude as well
ggplot(data=df) +
geom_point(mapping = aes(x = longitude, y = latitude, color=mag))
# as we can see, there is a big cluster where most earthquakes happen, with a smaller cluster that is noticeable, followed by sparsely distributed cases
ggplot(data=df) +
geom_bar(mapping = aes(x = mag, fill = year))
ggplot(data=df) +
geom_freqpoly(mapping = aes(x = mag, color = year))
ggplot(data=df) +
geom_density(mapping = aes(x = mag, color = year))
#ggplot(data=df) +
#  geom_point(mapping = aes(x = mag, y = year))
# Visualizing the earthquakes and their magnitudes each year
ggplot(df) +
geom_bar(mapping = aes(x = mag, fill = year)) +
facet_wrap(~ year)
get_ts_matrix <- function(ts_magnitude) {
time <- 0
mag <- 0
for (index in 1:nrow(ts_magnitude)) {
time[index] <- ts_magnitude[index,1]
mag[index] <- ts_magnitude[index,2]
}
mag_matrix <- matrix(ts_magnitude$df.mag,
nrow =length(ts_magnitude$df.timeYear),
dimnames = list(ts_magnitude$df.timeYear, "data"))
return(mag_matrix)
}
ggplot(data=df) +
geom_point(mapping = aes(x = longitude, y = latitude, color = mag)) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'Longitude', y = 'Latitude') +
transition_time(yearInt) +
ease_aes('linear')
ggplot(data=df) +
geom_point(mapping = aes(x = longitude, y = latitude, color = mag)) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'Longitude', y = 'Latitude') +
transition_time(yearInt) +
ease_aes('linear')
get_ts_matrix <- function(ts_magnitude) {
time <- 0
mag <- 0
for (index in 1:nrow(ts_magnitude)) {
time[index] <- ts_magnitude[index,1]
mag[index] <- ts_magnitude[index,2]
}
mag_matrix <- matrix(ts_magnitude$df.mag,
nrow =length(ts_magnitude$df.timeYear),
dimnames = list(ts_magnitude$df.timeYear, "data"))
return(mag_matrix)
}
ggplot(data=df) +
geom_bar(mapping = aes(x = mag)) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'Mag') +
transition_time(yearInt) +
ease_aes('linear')
ggplot(data=df) +
geom_bar(mapping = aes(x = mag), color="steelblue") +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'Mag') +
transition_time(yearInt) +
ease_aes('linear')
ggplot(data=df) +
geom_bar(mapping = aes(x = mag), fill = "steelblue") +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'Mag') +
transition_time(yearInt) +
ease_aes('linear')
gg_point = ggplot(data = mtcars) +
geom_point_interactive(aes(x = wt, y = qsec, color = mag, tooltip = carname, data_id = carname)) +
theme_minimal()
gg_point = ggplot(data = df) +
geom_point_interactive(aes(x = longitude, y = latitude, color = year)) +
theme_minimal()
gg_point = ggplot(data = df) +
geom_point_interactive(aes(x = longitude, y = latitude, color = year)) +
theme_minimal()
#gg_point = ggplot(data = df) +
#    geom_point_interactive(aes(x = longitude, y = latitude, color = year)) +
#  theme_minimal()
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
